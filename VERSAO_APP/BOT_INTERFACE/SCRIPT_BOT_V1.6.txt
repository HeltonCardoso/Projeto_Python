import pandas as pd

# Caminhos dos arquivos
planilha_origem = 'Planilha_Preenchida.xlsx'
planilha_destino = "Template_Produtos_Mpozenato_CADASTROTESTE.xlsx"

# Ler os dados da planilha de origem
df = pd.read_excel(planilha_origem)

# Criar um dicionário {EAN: Nome do Produto} com base no nome_onclick
produto_dict = {str(row["EAN"]).strip(): (row["NOMEONCLICK"] if pd.notna(row["NOMEONCLICK"]) else "Nome Desconhecido") for _, row in df.iterrows()}

# Criar listas para armazenar os dados
produto_lista = []
kit_lista = []
volume_lista = []
preco_lista = []
loja_web_lista = []

for _, row in df.iterrows():
    ean = str(row["EAN"]).strip()  # Garantir que o EAN é uma string sem espaços
    tipo_produto = row["TIPODEPRODUTO"]
    descricao = row["PRODUTO"]
    quantidade = row["QTDECOMPONENTES"]
    cor = row["COR"]
    altura = row["EMBALTURA"]
    largura = row["EMBLARGURA"]
    volumes = row["VOLUMES"]
    componentes = row["EANCOMPONENTES"]  # Pode ter valores separados por "/"
    marca = row["MARCA"]
    custo = row["CUSTO"]
    preco_venda = row["DE"]
    preco_promo = row["POR"]
    fornecedor = row["FORNECEDOR"]
    outros     = row["OUTROS"]
    ncm = row["NCM"]
    # Outros dados das colunas
    cod_forn = row["CODFORN"]
    nome_onclick = row["NOMEONCLICK"]
    categoria = row["CATEGORIA"]
    grupo = row["GRUPO"]
    nome_ecommerce = row["NOMEE-COMMERCE"]
    disponibilidade_web = row["DISPONIBILIDADEWEB"]
    descricao_html = row["DESCRICAOHTML"]
    
    # Corrigir o Tipo de Produto
    tipo_produto_valor = 0 if tipo_produto.strip().upper() == "PRODUTO ACABADO" else 2

    # Adicionar todos os dados na lista de produto
    produto_lista.append([ 
        ean, cod_forn, tipo_produto_valor, nome_onclick, nome_onclick, nome_onclick, nome_onclick, "", 
        marca, categoria, grupo, "", "", nome_ecommerce, cor, "", "F", "F", "F", "", volumes, 
        row["PESOBRUTO"], row["PESOLIQUIDO"], largura, altura, row["EMBCOMPRIMENTO"], "", 90, 1000, 
        disponibilidade_web, "F", "F", ncm,"", "0", "T", "F","F","NAO", nome_ecommerce, marca, 90, disponibilidade_web, 
        descricao_html, "F", "F"
    ])
    
    # Adicionar ao Kit se for um kit
    if tipo_produto.strip().upper() == "KIT" and pd.notna(componentes):
        componentes_lista = str(componentes).split("/")  # Dividir componentes
        for comp in componentes_lista:
            comp_ean = comp.strip()
            # Usar nome_onclick como nome do componente, pois PRODUTO está em branco
            nome_componente = produto_dict.get(comp_ean, "Desconhecido")  # Buscar nome do componente
            
            # Verificação para depurar a ausência do nome do componente
            if nome_componente == "Desconhecido":
                print(f"Componente não encontrado para EAN {comp_ean}. Usando 'Desconhecido'.")
            else:
                print(f"Componente encontrado: {comp_ean} - {nome_componente}")  # Verificar se o nome está sendo corretamente atribuído
            
            kit_lista.append([ean, comp_ean, nome_componente,"1","","0"])  # Adicionar nome do kit e do componente

    # Adicionar ao Volume se houver mais de um volume
    if pd.notna(volumes):
        for i in range(int(volumes)):  # Criar linha para cada volume
            volume_lista.append([ean, nome_onclick, row["VOLPESOBRUTO"], row["VOLPESOLIQ"], row["VOLLARGURA"], row["VOLALTURA"],"",row["VOLCOMPRIMENTO"],"","BOX","T", i + 1])

    # **Correção: Ajustando para garantir que o número de colunas corresponda com o esperado**
    # Adicionar ao Preço com 7 colunas
    preco_lista.append([ean, fornecedor, custo, outros,"","", row["CUSTOTOTAL"], preco_venda, preco_promo, preco_promo,"","","","F"])  # Agora com 7 colunas

    # Adicionar à Loja Web
    loja_web_lista.append([ean,"","","", row["CATEGORIAPRINCIPALTRAY"],"","","","T","T","","","", row["CATEGORIAPRINCIPALCORP"], row["NIVELADICIONAL1CORP"],"","","T","T"])

# Criar DataFrames para salvar na planilha vazia
df_produto = pd.DataFrame(produto_lista, columns=[ 
    "CODIGO DE BARRAS", "CODIGO FABRICANTE", "TIPO", "DESCRICAO COMPLETA", "DESCRICAO REDUZIDA", "DESCRICAO COMPRA", "DESCRICAO ETIQUETA", "OBSERVACAO",
    "MARCA", "CATEGORIA", "GRUPO", "SUBGRUPO", "GRUPO3", "COMPLEMENTO", "COR", "INFORMACOES DO PRODUTO", "IMPRIMIR COMPLEMENTO NF", 
    "IMPRIMIR COMPLEMENTO PV", "IMPRIMIR COMPLEMENTO PC", "TAMANHO", "QTDE VOLUME", "PESO BRUTO KG", "PESO LIQUIDO KG", "LARGURA CM", "ALTURA CM", 
    "COMPRIMENTO CM", "DIAMETRO", "GARANTIA DIAS", "ESTOQUE DE SEGURANCA", "DIAS PARA ENTREGA", "UTILIZA EMBALAGEM PROPRIA", "PRODUTO INATIVO", 
    "NCM", "CEST", "ORIGEM DA MERCADORIA", "PROD MERCADO INTERNO", "CFOP COM SUB", "CFOP FABRICACAO PROPRIA", "CONTROLA VOLUME", 
    "DESCRICAO WEB", "MARCA WEB", "GARANTIA WEB", "DISPONIBILIDADE WEB", "DESCRICAO HTML WEB", "DESTAQUE WEB", "LANCAMENTO WEB"
])

df_preco = pd.DataFrame(preco_lista, columns=["CODIGO DE BARRAS", "FORNECEDOR", "CUSTO PRODUTO","IPI R$","IPI %","FRETE", "CUSTO PRODUTO TOTAL", "PRECO DE VENDA TAB01_TAB02 ", "VALOR PROMOCAO TAB01", "VALOR PROMOCAO TAB02", "INICIO PROMO TAB01_TAB02","FIM PROMO TAB01_TAB","NAO CONSTAR EM TABELA DE PRECO","PRODUTO COM VENDA SUSPENSA"])

df_loja_web = pd.DataFrame(loja_web_lista, columns=["CODIGO DE BARRAS","ID PRODUTO TRAY","ID PRODUTO PAI TRAY","REFERENCIA TRAY", "CATEGORIA PRINCIPAL TRAY","NIVEL ADICIONAL 1 TRAY","NIVEL ADICIONAL 2 TRAY","NIVEL ADICIONAL 3 TRAY","ENVIAR PRODUTO SITE TRAY","PRODUTO DISPONIVEL TRAY","ID PRODUTO CORP","ID PRODUTO PAI CORP","REFERENCIA CORP", "CATEGORIA PRINCIPAL CORP", "NIVEL ADICIONAL 1 CORP","NIVEL ADICIONAL 2 CORP","NIVEL ADICIONAL 3 CORP","ENVIAR PRODUTO SITE CORP","PRODUTO DISPONIVEL CORP"])

df_kit = pd.DataFrame(kit_lista, columns=["EAN_KIT", "EAN_COMPONENTE", "DESCRICAO","QTDE","%CUSTO DO KIT","% DESC VENDA"])

df_volume = pd.DataFrame(volume_lista, columns=["CODIGO DE BARRAS", "COMPONENENTE EMBALAGEM", "PESO BRUTO", "PESO LIQUIDO", "LARGURA","ALTURA","DIAMETRO", "COMPRIMENTO","CUBICO","EMB INTELIPOST","ATIVO", "SEQ"])

# Escrever na planilha de destino
#with pd.ExcelWriter(planilha_destino, engine="openpyxl") as writer:
with pd.ExcelWriter(planilha_destino, engine="openpyxl", mode="a", if_sheet_exists="replace") as writer:
    df_produto.to_excel(writer, sheet_name="PRODUTO", index=False)
    df_preco.to_excel(writer, sheet_name="PRECO", index=False)
    df_loja_web.to_excel(writer, sheet_name="LOJA WEB", index=False)
    df_kit.to_excel(writer, sheet_name="KIT", index=False)
    df_volume.to_excel(writer, sheet_name="VOLUME", index=False)

print("Planilha preenchida com sucesso!")
